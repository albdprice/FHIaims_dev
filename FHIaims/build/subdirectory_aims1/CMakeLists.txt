
project(project_aims1 LANGUAGES Fortran C)
set(CMAKE_Fortran_COMPILER /opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpif90)
if (_tmp_flags)
  if (CMAKE_BUILD_TYPE)
  string(TOUPPER  buildtype)
  set(CMAKE_Fortran_FLAGS_ "")
  endif()
  set(CMAKE_Fortran_FLAGS "")
endif()
add_library(aims1 "")
if (2 EQUAL 3)
target_link_libraries(aims1 PUBLIC )
endif()
set_target_properties(aims1 PROPERTIES
Fortran_MODULE_DIRECTORY /home/albd/research/FHIaims/running_copy/FHIaims/build/modules)
target_link_libraries(aims1 PRIVATE mkl_intel_lp64;mkl_sequential;mkl_core;mkl_blacs_intelmpi_lp64;mkl_scalapack_lp64)
if (EXTERNAL_ELSI_PATH)
  find_package(elsi 2.1 REQUIRED NO_DEFAULT_PATH PATHS )
  target_link_libraries(aims1 PRIVATE elsi::elsi)
  static_linking_fix(aims1 elsi::elsi LIBS)
else()
if (aims1 STREQUAL aims1)
  target_link_libraries(aims1 PRIVATE elsi)
  static_linking_fix(aims1 elsi LIBS)
endif()
endif()
if (USE_LIBXC AND LIBXC_VERSION AND aims1 STREQUAL aims1)
  target_link_libraries(aims1 PUBLIC libxc-custom)
endif()
if (USE_CUDA AND NOT 3.10.2 VERSION_LESS 3.8)
  enable_language(CUDA)
endif()
target_include_directories(aims1 PRIVATE )
