# vim: set syntax=maple:

read "basics.mpl";
read "pbec.df";

epsilon[Ctpps] := proc(epsiloncrvepkzb, z)
    epsiloncrvepkzb*(1+d*epsiloncrvepkzb*z^3)
end;
d := 2.8;

epsilon[Crevpkzb] := proc(nu, nd, gradu, gradd, grad, Czetaxi, z)
    epsilon[Cpbe](nu+nd, (nu-nd)/(nu+nd), grad)
    *(1+Czetaxi*z^2)
    -(1+Czetaxi)*z^2
    *(nu/(nu+nd)*mymax(epsilon[Cpbe](nu+nd, (nu-nd)/(nu+nd), grad), epsilon[Cpbe](nu, 1, gradu))
     +nd/(nu+nd)*mymax(epsilon[Cpbe](nu+nd, (nu-nd)/(nu+nd), grad), epsilon[Cpbe](nd, 1, gradd)))
end;
epsilon[CrevpkzbU] := proc(nu, nd, gradd, grad, Czetaxi, z)
    epsilon[Cpbe](nu+nd, (nu-nd)/(nu+nd), grad)
    *(1+Czetaxi*z^2-(1+Czetaxi)*z^2*nu/(nu+nd))
    -(1+Czetaxi)*z^2
    *nd/(nu+nd)*epsilon[Cpbe](nd, 1, gradd)
end;

CC := proc(zeta, xi)
    CC0(zeta)/(1+xi^2*((1+zeta)^(-4/3)+(1-zeta)^(-4/3))/2)^4
end;
CC0 := proc(zeta)
    0.53+0.87*zeta^2+0.50*zeta^4+2.26*zeta^6
end;

f := rho*epsilon[Ctpps](
           epsilon[Crevpkzb](
               rho(a), rho(b), sqrt(sigma(aa)), sqrt(sigma(bb)), sqrt(sigma),
               CC((rho(a)-rho(b))/rho,
                   Xi(rho, Gradzeta(rho, (rho(a)-rho(b))/rho, sigma(aa), sigma(bb), sigma(ab)))),
               Z(rho, sqrt(sigma), tau/2)),
           Z(rho, sqrt(sigma), tau/2));
g := 0;
G := rho(s)*epsilon[Ctpps](
           epsilon[CrevpkzbU](
               0, rho(s), sqrt(sigma(ss)), sqrt(sigma(ss)), CC0(1),
               Z(rho(s), sqrt(sigma(ss)), tau(s)/2)),
           Z(rho(s), sqrt(sigma(ss)), tau(s)/2));

title := "TPSS correlation functional";
